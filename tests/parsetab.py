
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'$end':([2,3,4,6,8,9,19,28,],[-5,-1,0,-4,-2,-3,-7,-6,]),'OUTPUT':([12,],[20,]),'RPAREN':([13,14,16,17,20,22,26,29,30,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,30,36,41,-15,-13,-17,47,-30,48,-11,50,51,52,53,-21,54,-14,-12,-24,-29,-10,-22,-25,-23,-20,57,58,-19,-16,]),'OP_MUL':([12,],[21,]),'INPUT':([12,],[22,]),'LPAREN':([0,2,3,6,7,8,9,11,13,14,15,16,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[5,-5,5,-4,12,-2,-3,12,-28,-26,-9,-27,-8,-7,31,12,31,12,12,12,12,-6,-15,-13,-17,31,-30,12,-11,31,12,12,12,-21,12,12,-14,-12,-24,-29,-10,-22,-25,-23,-20,-19,-16,]),'STRING':([7,11,13,14,15,16,18,21,23,24,25,26,30,34,35,36,38,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[13,13,-28,-26,-9,-27,-8,13,13,13,13,13,-13,-30,13,-11,13,13,13,-21,13,13,-12,-24,-29,-10,-22,-25,-23,-20,-19,]),'RBRACE':([11,13,14,15,16,18,30,36,41,47,48,50,51,52,53,54,57,],[19,-28,-26,-9,-27,-8,-13,-11,-21,-12,-24,-10,-22,-25,-23,-20,-19,]),'OP_ADD':([12,],[23,]),'IMPORT':([5,],[10,]),'LBRACE':([0,2,3,6,8,9,19,28,],[1,-5,1,-4,-2,-3,-7,-6,]),'ASSIGN':([12,],[27,]),'OP_SUB':([12,],[25,]),'NUMBER':([7,11,13,14,15,16,18,21,23,24,25,26,30,34,35,36,38,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[16,16,-28,-26,-9,-27,-8,16,16,16,16,16,-13,-30,16,-11,16,16,16,-21,16,16,-12,-24,-29,-10,-22,-25,-23,-20,-19,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,14,17,14,26,-28,-26,-9,-27,-8,32,14,32,14,14,14,14,43,-15,-13,45,-17,32,-30,14,-11,32,14,14,14,-21,14,14,56,-18,-14,-12,-24,-29,-10,-22,-25,-23,-20,-19,-16,]),'OP_DIV':([12,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'program':([0,],[4,]),'parameter_list':([21,23,24,25,26,],[35,38,39,40,42,]),'expression_list':([7,],[11,]),'declaration':([20,22,33,37,],[29,29,46,46,]),'import_statement':([0,3,],[6,9,]),'expression':([7,11,21,23,24,25,26,35,38,39,40,42,43,],[15,18,34,34,34,34,34,49,49,49,49,49,55,]),'declaration_list':([20,22,],[33,37,]),'type':([31,],[44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',27),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',53),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',54),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',61),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',62),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',71),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',72),
  ('type -> ID','type',1,'p_type','parser.py',80),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',84),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',89),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_add','parser.py',97),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_sub','parser.py',101),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mul','parser.py',105),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',109),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',113),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',117),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',121),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',125),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',126),
]
